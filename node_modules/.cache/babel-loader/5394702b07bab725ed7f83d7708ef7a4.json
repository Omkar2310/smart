{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectcartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectcartItems], cartItems => cartItems.reduce((accumulateQuantity, cartItem) => accumulateQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectcartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/media/sky/G/webdev/smart/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectcartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulateQuantity","cartItem","quantity","selectCartTotal","accumalatedQuantity","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAExCE,IAAD,IAAUA,IAAI,CAACE,SAF0B,CAAtC;AAMP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAIA,IAAI,CAACI,MAF6B,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE9CC,SAAS,IAAIA,SAAS,CAACI,MAAV,CACT,CAACC,kBAAD,EAAoBC,QAApB,KAAiCD,kBAAkB,GAAGC,QAAQ,CAACC,QADtD,EAER,CAFQ,CAFiC,CAA3C;AAQP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CACzC,CAACI,eAAD,CADyC,EAEzCC,SAAS,IACPA,SAAS,CAACI,MAAV,CACE,CAACK,mBAAD,EAAsBH,QAAtB,KACEG,mBAAmB,GAAGH,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACI,KAFvD,EAGE,CAHF,CAHuC,CAAtC","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectcartItems = createSelector(\n    [selectCart],\n    (cart) => cart.cartItems\n\n);\n\nexport const selectCartHidden = createSelector(\n    [selectCart],\n    cart => cart.hidden\n)\n\nexport const selectCartItemsCount = createSelector(\n    [selectcartItems],\n    cartItems => cartItems.reduce(\n        (accumulateQuantity,cartItem) => accumulateQuantity + cartItem.quantity\n        ,0 )\n\n);\n\nexport const selectCartTotal = createSelector(\n    [selectcartItems],\n    cartItems =>\n      cartItems.reduce(\n        (accumalatedQuantity, cartItem) =>\n          accumalatedQuantity + cartItem.quantity * cartItem.price,\n        0\n      )\n  );"]},"metadata":{},"sourceType":"module"}